* React Single-Page Application

An example React application demonstrating the use of the headless functionality
of django-allauth.

** Running

First, start by running the containers:

#+begin_src bash
  docker-compose up
#+end_src

Then, visit the app over at http://localhost:10000.


** Status

*** Frontend [100%]

**** DONE Login

**** DONE Signup

**** DONE Password reset

**** DONE Confirm email

**** DONE Manage email addresses

- [X] Mark email as primary

**** DONE Change password

**** DONE Set password

**** DONE Re-authentication
- [X] Reauthenticate by password
- [X] Reauthenticate using 2FA
- [X] Accessing /account/2fa/recovery-codes without reauth should redirect
- [X] Expose reauthentication flows in 401 response

**** DONE Third-party login
- [X] Login
- [X] Signup
- [X] Provider disconnect
- [X] Disconnect error handling

**** DONE MFA

**** DONE User sessions

*** Headless [90%]

**** TODO Check rate limit handling

**** DONE Make "Unknown account" email signup URL configurable

**** DONE Mobile client (access tokens, no CSRF/cookies)
- [X] Don't require CSRF
- [X] Session tokens, access tokens
- [X] Provider login via token
- [X] Token login for Apple
- [X] Token login for Facebook
- [X] Duplicate urlnames, use namespaces

**** DONE Disable messages framework
Or, add to meta in response?
Disabled, let's not complicate things.

**** DONE Social signin

**** DONE MFA

**** DONE OpenAPI Spec

**** DONE Documentation

**** TODO Test coverage

**** DONE Change password vs ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE

**** DONE Investigate a headless-only mode
=HEADLESS_ONLY = True=  ?

**** DONE Check interaction with user sessions
Mobile sesions to also show up.

**** DONE Prevent enumeration
During signup, there is indeed a pending flow. But, given that this is not
stored in the session a subsequent call to the endpoint reveals a different
response from which an enumeration related conclusion can be drawn.

**** DONE Provider redirect vs token vs ...
Need a way of indicating what mechanisms are supported.

**** DONE Check caching headers

**** DONE Pass along success/error to redirect callback
E.g. the frontend connect process needs to be able to show a "Provider
Connected!" message (or failure).

**** DONE Revisit URL structure
Having underscores as =mfa_authenticate= and =verify_email= in URLs? Matches stages, but...

**** DONE Decide if API needs to be made more REST-ish
e.g. =POST= to /2fa/authenticators/totp/{id} to delete? But TOTP is a singleton, so why.

**** DONE Decide upon __all__
Perhaps use '*' ? or '_'...

**** DONE Add error codes
Needed in order for the frontend to become independent of UI (i18n) of the backend
- [X] Add codes to JSON
- [X] Go over all ValidationError's, assign codes.

**** DONE Spec
- [ ] User ID integer, or str? Depends on config.
- [X] Passsword reset token via GET?
